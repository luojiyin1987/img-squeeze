# Pre-commit configuration for img-squeeze Rust project
# See https://pre-commit.com for more information
repos:
  # Built-in hooks for general file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']  # Prevent files larger than 1MB
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Rust-specific hooks
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      # Format Rust code
      - id: fmt
        name: Rust fmt
        description: Format Rust code with rustfmt
        entry: cargo fmt
        language: system
        files: \.rs$
        args: ["--all", "--", "--check"]

      # Lint Rust code
      - id: clippy
        name: Rust clippy
        description: Lint Rust code with clippy
        entry: cargo clippy
        language: system
        files: \.rs$
        args: ["--all-targets", "--all-features", "--", "-D", "warnings"]

      # Check Rust code compiles
      - id: cargo-check
        name: Rust cargo check
        description: Check Rust code compiles
        entry: cargo check
        language: system
        files: \.rs$
        args: ["--all-targets", "--all-features"]
        pass_filenames: false

  # Additional Rust tooling
  - repo: local
    hooks:
      # Run Rust tests
      - id: cargo-test
        name: Rust cargo test
        description: Run Rust tests
        entry: cargo test
        language: system
        files: \.rs$
        args: ["--all-features"]
        pass_filenames: false

      # Security audit
      - id: cargo-audit
        name: Rust cargo audit
        description: Security audit of Rust dependencies
        entry: cargo audit
        language: system
        files: Cargo\.(toml|lock)$
        pass_filenames: false

      # Check for unused dependencies
      - id: cargo-machete
        name: Rust cargo machete
        description: Check for unused dependencies
        entry: cargo machete
        language: system
        files: Cargo\.toml$
        pass_filenames: false
        # This hook is optional and will be skipped if cargo-machete is not installed
        verbose: true
        stages: [manual]

      # Validate Cargo.toml format
      - id: cargo-toml-fmt
        name: Cargo.toml format check
        description: Check Cargo.toml is properly formatted
        entry: bash -c 'cargo metadata --format-version 1 >/dev/null'
        language: system
        files: Cargo\.toml$
        pass_filenames: false

  # Documentation checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-docstring-first
        files: \.rs$

# Global configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [cargo-machete]  # Skip optional hooks in CI
  submodules: false

# Performance optimization
default_stages: [commit]
minimum_pre_commit_version: "3.0.0"